{"version":3,"sources":["logo.svg","utils/constants.js","routes.js","views/Home/index.js","views/Demo/index.js","App.js","models/Demo/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","urls","security","sonqo","socket","bo","customers","mixLogin","demo","routes","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","src","logo","alt","Link","to","Component","DemoComponent","getData","getDataId","_this$props","result","resultId","console","log","map","res","index","key","name","email","phone","website","connect","DemoModels","_ref","_ref$DemoModels","fetchData","fetchIdData","data","App","BrowserRouter","Route","exact","path","component","models_Demo","reducers","increment","payload","list","objectSpread","listObject","effects","dispatch","_fetchData","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetch","concat","then","response","json","catch","e","error","stop","apply","arguments","_fetchIdData","_callee2","id","_this2","_context2","_x","fetchDeleteData","_fetchDeleteData","_callee3","_this3","_context3","method","headers","Headers","Content-Type","_x2","fetchCreateData","_fetchCreateData","_callee4","_this4","_context4","body","_x3","Boolean","window","location","hostname","match","store","init","models","history","createHistory","ReactDOM","render","es","Router","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1d54b37e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const urlsList = {\n  develop: {\n    security: 'http://develop.rcp.pe/api/v1',\n    sonqo: 'http://develop.rcp.pe/dashboard/api/v1',\n    socket: 'http://localhost:8000',\n    bo: 'http://172.20.60.62:8011/bo/api/v1',\n    customers: 'http://172.20.60.62:8012/bo/api/v1',\n    mixLogin: 'http://develop.rcp.pe/login',\n    demo: 'https://jsonplaceholder.typicode.com'\n    //   pe: 'https://pre1a.pagoefectivo.pe',\n    //   culqi_key: 'pk_test_DDrkoWhUkNV12dx9'\n  },\n  staging: {\n    security: 'http://staging.rcp.pe/api/v1',\n    sonqo: 'http://staging.rcp.pe/dashboard/api/v1',\n    socket: 'http://172.20.60.62:8000',\n    bo: 'http://172.20.60.62:8011/bo/api/v1',\n    customers: 'http://172.20.60.62:8012/bo/api/v1',\n    mixLogin: 'http://staging.rcp.pe/login',\n    demo: 'https://jsonplaceholder.typicode.com'\n    //   pe: 'https://pre1a.pagoefectivo.pe',\n    //   culqi_key: 'pk_test_DDrkoWhUkNV12dx9'\n  },\n  // pre_do: {\n  //   security: 'http://pre_do.rcp.pe/api/v1',\n  //   sonqo: 'http://pre_do.rcp.pe/dashboard/api/v1',\n  //   bo: 'http://pre_do.rcp.pe/bo/api/v1',\n  //   mixLogin: 'http://pre_do.rcp.pe/login'\n  //   //   pe: 'https://pre1a.pagoefectivo.pe',\n  //   //   culqi_key: 'pk_test_DDrkoWhUkNV12dx9'\n  // },\n  pre_production: {\n    security: 'http://pre_production.rcp.pe/api/v1',\n    sonqo: 'http://pre_production.rcp.pe/dashboard/api/v1',\n    socket: 'http://172.20.60.65:8000',\n    bo: 'http://172.20.60.65:8011/bo/api/v1',\n    customers: 'http://172.20.60.65:8012/bo/api/v1',\n    mixLogin: 'http://pre_production.rcp.pe/login'\n    //   pe: 'https://pre1a.pagoefectivo.pe',\n    //   culqi_key: 'pk_test_DDrkoWhUkNV12dx9'\n  },\n  production: {\n    security: 'https://production.yachay.pe/api/v1',\n    sonqo: 'https://production.yachay.pe/dashboard/api/v1',\n    socket: 'https://production.yachay.pe:8000',\n    bo: 'https://production.yachay.pe/bo/api/v1',\n    mixLogin: 'https://production.yachay.pe/login'\n    //   pe: 'https://cip.pagoefectivo.pe',\n    //   culqi_key: 'pk_live_PkTwBNbRWC7CUw09'\n  }\n};\n\nexport const urls =\n  urlsList[\n    process.env.REACT_APP_URL_ENV ? process.env.REACT_APP_URL_ENV : 'staging'\n  ];\n","import { compile } from 'path-to-regexp';\nimport { urls } from './utils/constants';\n\nexport default {\n  mixLogin: urls.mixLogin,\n  home: '/',\n  welcome: '/inicio',\n  demo: '/demo',\n  demoPagination: '/demo/:page([0-9]{1,})',\n  demopaginationId: '/demo/:id',\n  compile: (path, keys) => compile(path)(keys)\n};\n","import React, { Component } from 'react';\nimport logo from '../../logo.svg';\nimport { Link } from 'react-router-dom';\nimport routes from '../../routes';\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          <h1> Proyecto Base RCP</h1>\n        </p>\n        <Link to={routes.demo}>\n          <p>Api Demo</p>\n        </Link>\n      </header>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nclass DemoComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentWillMount() {\n    this.props.getData();\n    this.props.getDataId();\n  }\n  render() {\n    const { result, resultId } = this.props;\n    console.log(result, this.props);\n    return (\n      <div>\n        <h1>Listado de Usuario</h1>\n        <ul>\n          {result &&\n            result.map((res, index) => {\n              return <li key={index + 1}>{res.name}</li>;\n            })}\n        </ul>\n        <h1>Detalle del Usuario: 1</h1>\n        {resultId && (\n          <div>\n            Nombre: {resultId.name}\n            <br />\n            Email: {resultId.email}\n            <br />\n            Celular: {resultId.phone}\n            <br />\n            PÃ¡gina Web: {resultId.website}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapState = state => ({\n  result: state.DemoModels.result,\n  resultId: state.DemoModels.resultId\n});\n\nconst mapDispatch = ({ DemoModels: { fetchData, fetchIdData } }) => ({\n  getData: () => fetchData(),\n  getDataId: data => fetchIdData(1)\n});\n\nDemoComponent.propTypes = {\n  result: PropTypes.array,\n  resultId: PropTypes.object\n};\nexport default connect(\n  mapState,\n  mapDispatch\n)(DemoComponent);\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nimport './App.css';\nimport Home from './views/Home';\nimport routes from './routes';\nimport DemoComponent from './views/Demo/index';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <div>\n            <Route exact path={routes.home} component={Home} />\n            <Route path={routes.demo} component={DemoComponent} />\n            {/* <Route path=\"/topics\" component={Topics} /> */}\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { urls } from '../../utils/constants';\nexport default {\n  state: {},\n  reducers: {\n    // handle state changes with pure functions\n    increment(state, payload) {\n      return state + payload;\n    },\n    list(state, payload) {\n      return {\n        ...state,\n        result: payload\n      };\n    },\n    listObject(state, payload) {\n      return {\n        ...state,\n        resultId: payload\n      };\n    }\n  },\n  effects: dispatch => ({\n    async fetchData() {\n      fetch(`${urls.demo}/users`)\n        .then(response => response.json())\n        .then(json => {\n          console.log(json);\n          this.list(json);\n        })\n        .catch(e => console.error('Something went wrong'));\n    },\n    async fetchIdData(id) {\n      fetch(`${urls.demo}/users/${id}`)\n        .then(response => response.json())\n        .then(json => this.listObject(json))\n        .catch(e => console.error('Something went wrong'));\n    },\n    async fetchDeleteData(id) {\n      //  const params = {\n      //    method: 'DELETE',\n      //    headers: new Headers( {\n      //       'Content-Type': 'application/json'\n      // }\n      fetch(`${urls.demo}/users/${id}`, {\n        method: 'DELETE',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      })\n        .then(response => response.json())\n        .then(json => this.listObject(json))\n        .catch(e => console.error('Something went wrong'));\n    },\n    async fetchCreateData(data) {\n      fetch(`${urls.demo}/users/${data.id}`, {\n        method: 'DELETE',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        }),\n        body: data\n      })\n        .then(response => response.json())\n        .then(json => this.listObject(json))\n        .catch(e => console.error('Something went wrong'));\n    }\n  })\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport createHistory from 'history/createBrowserHistory';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { init } from '@rematch/core';\nimport * as models from './models/';\nimport { Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = init({\n  models\n});\nconst history = createHistory();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}